/*

proc crudoperation.pc SQLCHECK=FULL userid=system/Welcome123

*/

#include<stdio.h>
#include<conio.h>
#include<string.h>
exec sql include sqlca;

exec sql begin declare section;
char uid[250];
int p_id;
char p_name[10];
float p_salary;
char array_name[10][10];
float array_salary[10];
int count,flag;
char errorMsg[100];

int pro_id;
char pro_name[50];
char pro_city[50];
struct Emp{
	int s_id;
	char s_name[10];
	float s_salary;
}emp[10];

exec sql end declare section;
void addEmp() {
		printf("Enter the id\n");
		scanf("%d",&p_id);
		printf("Enter the name\n");
		scanf("%s",&p_name);
		printf("Enter the salary\n");
		scanf("%f",&p_salary);
		EXEC SQL insert into emp values(:p_id,:p_name,:p_salary);
		EXEC SQL COMMIT WORK;
		printf("Record inserted successfully");
}
void deleteEmp() {
		printf("Enter the id\n");
		scanf("%d",&p_id);
		EXEC SQL delete from emp where empid=:p_id;
		EXEC SQL COMMIT WORK;
		printf("Record deleted successfully");
}
void updateEmp() {
		printf("Enter the id\n");
		scanf("%d",&p_id);
		printf("Enter the salary\n");
		scanf("%f",&p_salary);
		EXEC SQL update emp set salary = :p_salary where empid=:p_id;
		EXEC SQL COMMIT WORK;
		printf("Record updated successfully");
}
void displayOneEmp() {
		printf("Enter the id\n");
		scanf("%d",&p_id);
		EXEC SQL select name,salary into :p_name,:p_salary from 
		emp where empid=:p_id;
		printf("Name is %s and salary is %f\n",p_name,p_salary);
}
void retriveMoreThanOneUsingArray() {
	int i;
	flag=0;
	EXEC SQL select count(*) into :count from emp;
	printf("Number of records are %d\n",count);
	for(i=0;i<count;i++) {
	flag= 101+i;
	EXEC SQL select name,salary into :array_name[i],:array_salary[i] 
	from emp where empid=:flag;
	}

	printf("Number of records details are \n");
	for(i=0;i<count;i++) {
	printf("Name is %s and Salary is %f\n",
	array_name[i],array_salary[i]);			
	}
}

void retriveMoreThanOneRecUsingCursorWithStruct() {
	int i;
	EXEC SQL select count(*) into :count from emp;
	EXEC SQL DECLARE emp_cursor1 CURSOR FOR select * from emp;
	EXEC SQL OPEN emp_cursor1;
	for(i=0;i<count;i++){
	EXEC SQL FETCH emp_cursor1 into :emp[i].s_id,:emp[i].s_name,:emp[i].s_salary;
	}
	EXEC SQL CLOSE emp_cursor1;
	printf("Records display using cursor are \n");
	for(i=0;i<count;i++){
	printf("Id is %d, name is %s and salary is %f\n",
	emp[i].s_id,emp[i].s_name,emp[i].s_salary);
	}

}

void plsqlAnonymousBlock() {
	EXEC SQL EXECUTE 
		    DECLARE 
			v_name varchar(10);
			BEGIN 
				select name into :p_name from emp;
			exception 
			when others then 
			dbms_output.put_line('Exception generated');
			//:errorMsg:='Error Generated';
			:errorMsg:=SQLCODE;
			END;
	END-EXEC;
	printf("%s\n",errorMsg);
	printf("Name is from PL SQL Block %s\n",p_name);
}

void callProcedure() {
printf("Enter the employee name \n");
scanf("%d",&pro_id);
	EXEC SQL EXECUTE 
		    BEGIN 
				getDeptName(:pro_id,:pro_name);	
			END;
	END-EXEC;
	printf("The department name is %s\n",pro_name);
}

void callFunction() {
printf("Enter the employee name \n");
scanf("%d",&pro_id);
	EXEC SQL EXECUTE 
		    BEGIN 
				:pro_city := getCity(:pro_id);
			END;
	END-EXEC;
	printf("The city name is %s\n",pro_city);
}


void err_report() {
	printf("Error generated\n");
	printf("Error Msg \n%s and Error code %d\n",
	sqlca.sqlerrm.sqlerrmc, sqlca.sqlcode);
}
void main() {
  int ch,con;  
  strcpy(uid,"system/Welcome123");
  EXEC SQL WHENEVER SQLERROR DO err_report();	
  EXEC SQL connect :uid;
  callFunction();
  //callProcedure();
  //plsqlAnonymousBlock();
  //retriveMoreThanOneUsingArray();
 // retriveMoreThanOneRecUsingCursorWithStruct();
  /*do {
	printf("1:Add Emp , 2:Delete Emp, \n3:Update Emp, 4 Display One Emp Info\n");
	printf("Enter your choice\n");
	scanf("%d",&ch);
	switch(ch) {
		case 1:addEmp();
			break;
		case 2:deleteEmp();
			break;
		case 3:updateEmp();
			break;
		case 4:displayOneEmp();
			break;
	}
 printf("\nDo want to continue?(1=yes/0=n)\n");
 scanf("%d",&con);
 }while(con==1);
 printf("Thank You!");
 */  
  getch();	
}



